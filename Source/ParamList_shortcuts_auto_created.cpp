#include "stdafx.h"
#include "ParamList_shortcuts_auto_created.h"
#include "ParamRegister.h"
#include "ParamList.h"
#include "ParamRegister.h"

//The following code is automatically created and provides you quick and easy access to all init values of outputs defined in ControlUserIOConfig.json.
//These shortcuts are only useful if you use the .exe version of control,
//they are not necessary when using the .dll version.

// The shortcut code is created on program start and stored in [DebugFolder]\ParamList_shortcuts_auto_create.h and .cpp,
// if the option to create these files is enabled in the configuration file
// ControlParam_SystemParamList.txt, i.e. if in that file we have the line
// DoCreateIOListShortcuts = TRUE
// You can also define the [DebugFolder] there, by modifying the line
// DebugFilePath=D:\DebugFiles\

//To use the shortcuts, copy the files ParamList_shortcuts_auto_create.h and .cpp into the source folder of Control.

double* InitMOTCoilCurrent;
double* InitChillerSetpoint;
double* InitLatticePowerSetpoint;
double* InitPMTGain;
double* InitElectrodeAVoltage;
double* InitElectrodeBVoltage;
double* InitElectrodeCVoltage;
double* InitOvenVoltage;
bool* InitOscilloscopeTrigger;
bool* InitCameraTrigger0;
bool* InitCameraTrigger1;
bool* InitPMTTrigger;
bool* InitMOTCoilsToHelmholtz;
bool* InitElectrodeA;
bool* InitElectrodeB;
bool* InitElectrodeC;
bool* InitBiasX;
bool* InitBiasY;
bool* InitBiasZ;
bool* InitTorunCoilDriverD0;
bool* InitTorunCoilDriverD1;
bool* InitTorunCoilDriverD2;
bool* InitTorunCoilDriverTrigger;
bool* Init10MHzRfSourceSelection;
bool* InitBlueDetectionShutter;
bool* InitBlueMOTShutter;
bool* InitZSShutter;
bool* InitRedMOTShutter;
bool* InitRedPumpShutter;
bool* InitRepumpShutter;
bool* InitPumpPolarization1Shutter;
bool* InitPumpPolarization2Shutter;
bool* InitCoarseSpectroscopyShutter;
double* InitIntensityCoarseSpectroscopyAOM;
double* InitStartFrequencyCoarseSpectroscopyAOM;
double* InitStopFrequencyCoarseSpectroscopyAOM;
double* InitModulationFrequencyCoarseSpectroscopyAOM;
bool* InitFSKModeCoarseSpectroscopyAOM;
double* InitRampRateClockCoarseSpectroscopyAOM;
bool* InitClearACC1CoarseSpectroscopyAOM;
bool* InitTriangleBitCoarseSpectroscopyAOM;
bool* InitFSKBitCoarseSpectroscopyAOM;
double* InitIntensityClockSteeringAOM;
double* InitStartFrequencyClockSteeringAOM;
double* InitStopFrequencyClockSteeringAOM;
double* InitModulationFrequencyClockSteeringAOM;
bool* InitFSKModeClockSteeringAOM;
double* InitRampRateClockClockSteeringAOM;
bool* InitClearACC1ClockSteeringAOM;
bool* InitTriangleBitClockSteeringAOM;
bool* InitFSKBitClockSteeringAOM;
double* InitIntensityClockSpectroscopyDDS;
double* InitStartFrequencyClockSpectroscopyDDS;
double* InitStopFrequencyClockSpectroscopyDDS;
double* InitModulationFrequencyClockSpectroscopyDDS;
bool* InitFSKModeClockSpectroscopyDDS;
double* InitRampRateClockClockSpectroscopyDDS;
bool* InitClearACC1ClockSpectroscopyDDS;
bool* InitTriangleBitClockSpectroscopyDDS;
bool* InitFSKBitClockSpectroscopyDDS;
double* InitIntensityClockSpectroscopyDDSfixed40MHz;
double* InitStartFrequencyClockSpectroscopyDDSfixed40MHz;
double* InitStopFrequencyClockSpectroscopyDDSfixed40MHz;
double* InitModulationFrequencyClockSpectroscopyDDSfixed40MHz;
bool* InitFSKModeClockSpectroscopyDDSfixed40MHz;
double* InitRampRateClockClockSpectroscopyDDSfixed40MHz;
bool* InitClearACC1ClockSpectroscopyDDSfixed40MHz;
bool* InitTriangleBitClockSpectroscopyDDSfixed40MHz;
bool* InitFSKBitClockSpectroscopyDDSfixed40MHz;
double* InitIntensityRedMOTAOM;
double* InitStartFrequencyRedMOTAOM;
double* InitStopFrequencyRedMOTAOM;
double* InitModulationFrequencyRedMOTAOM;
bool* InitFSKModeRedMOTAOM;
double* InitRampRateClockRedMOTAOM;
bool* InitClearACC1RedMOTAOM;
bool* InitTriangleBitRedMOTAOM;
bool* InitFSKBitRedMOTAOM;
double* InitIntensityRedPumpAOM;
double* InitStartFrequencyRedPumpAOM;
double* InitStopFrequencyRedPumpAOM;
double* InitModulationFrequencyRedPumpAOM;
bool* InitFSKModeRedPumpAOM;
double* InitRampRateClockRedPumpAOM;
bool* InitClearACC1RedPumpAOM;
bool* InitTriangleBitRedPumpAOM;
bool* InitFSKBitRedPumpAOM;
double* InitIntensityPumpDPAOM;
double* InitStartFrequencyPumpDPAOM;
double* InitStopFrequencyPumpDPAOM;
double* InitModulationFrequencyPumpDPAOM;
bool* InitFSKModePumpDPAOM;
double* InitRampRateClockPumpDPAOM;
bool* InitClearACC1PumpDPAOM;
bool* InitTriangleBitPumpDPAOM;
bool* InitFSKBitPumpDPAOM;
double* InitFrequencyBlueMOTDPAOM;
double* InitIntensityBlueMOTDPAOM;
double* InitFrequencyBlueDetectionDPAOM;
double* InitIntensityBlueDetectionDPAOM;
double* InitFrequencyLatticeAOM;
double* InitIntensityLatticeAOM;
double* InitFrequencyLatticeEOM;
double* InitIntensityLatticeEOM;
double* InitFrequencyCh0ClockPDHDDS;
double* InitIntensityCh0ClockPDHDDS;
double* InitFrequencyCh1ClockPDHDDS;
double* InitIntensityCh1ClockPDHDDS;
double* InitPhaseCh1ClockPDHDDS;
double* InitIntensityUserIOTestDDSAD9854_0;
double* InitStartFrequencyTuningWordUserIOTestDDSAD9854_0;
double* InitStopFrequencyTuningWordUserIOTestDDSAD9854_0;
double* InitModulationFrequencyUserIOTestDDSAD9854_0;
bool* InitFSKModeUserIOTestDDSAD9854_0;
double* InitRampRateClockUserIOTestDDSAD9854_0;
bool* InitClearACC1UserIOTestDDSAD9854_0;
bool* InitTriangleBitUserIOTestDDSAD9854_0;
bool* InitFSKBitUserIOTestDDSAD9854_0;
double* InitFrequencyUserIOTestDDSAD9858_0;
double* InitAttenuationUserIOTestDDSAD9858_0;
double* InitFrequencyCh0UserIOTestDDSAD9958_0;
double* InitIntensityCh0UserIOTestDDSAD9958_0;
double* InitFrequencyCh1UserIOTestDDSAD9958_0;
double* InitIntensityCh1UserIOTestDDSAD9958_0;
double* InitPhaseCh1UserIOTestDDSAD9958_0;
double* InitSpareAnalogOut0;
double* InitSpareAnalogOut1;
double* InitSpareAnalogOut2;
double* InitSpareAnalogOut3;
double* InitSpareAnalogOut4;
double* InitSpareAnalogOut5;
double* InitSpareAnalogOut6;
double* InitSpareAnalogOut7;
bool* InitSpareDigitalOut0;
bool* InitSpareDigitalOut1;
bool* InitSpareDigitalOut2;
bool* InitSpareDigitalOut3;
bool* InitSpareDigitalOut4;
bool* InitSpareDigitalOut5;
bool* InitSpareDigitalOut6;
bool* InitSpareDigitalOut7;
bool* InitSpareDigitalOut8;
bool* InitSpareDigitalOut9;
bool* InitSpareDigitalOut10;
bool* InitSpareDigitalOut11;
bool* InitSpareDigitalOut12;
bool* InitSpareDigitalOut13;
bool* InitSpareDigitalOut14;
bool* InitSpareDigitalOut15;
bool* InitExtraClockShutter0;
bool* InitExtraClockShutter1;
bool* InitExtraClockShutter2;
bool* InitExtraClockShutter3;
bool* InitExtraClockShutter4;
bool* InitExtraClockShutter5;
bool* InitAdditionalShutter0;
bool* InitAdditionalShutter1;
bool* InitAdditionalShutter2;
bool* InitAdditionalShutter3;
bool* InitAdditionalShutter4;
bool* InitAdditionalShutter5;
bool* InitAdditionalShutter6;
bool* InitAdditionalShutter7;

void CParamRegister::CreateShortcutsToUserIOInitParams() {
	InitMOTCoilCurrent = GetParamDouble("InitMOTCoilCurrent");
	InitChillerSetpoint = GetParamDouble("InitChillerSetpoint");
	InitLatticePowerSetpoint = GetParamDouble("InitLatticePowerSetpoint");
	InitPMTGain = GetParamDouble("InitPMTGain");
	InitElectrodeAVoltage = GetParamDouble("InitElectrodeAVoltage");
	InitElectrodeBVoltage = GetParamDouble("InitElectrodeBVoltage");
	InitElectrodeCVoltage = GetParamDouble("InitElectrodeCVoltage");
	InitOvenVoltage = GetParamDouble("InitOvenVoltage");
	InitOscilloscopeTrigger = GetParamBool("InitOscilloscopeTrigger");
	InitCameraTrigger0 = GetParamBool("InitCameraTrigger0");
	InitCameraTrigger1 = GetParamBool("InitCameraTrigger1");
	InitPMTTrigger = GetParamBool("InitPMTTrigger");
	InitMOTCoilsToHelmholtz = GetParamBool("InitMOTCoilsToHelmholtz");
	InitElectrodeA = GetParamBool("InitElectrodeA");
	InitElectrodeB = GetParamBool("InitElectrodeB");
	InitElectrodeC = GetParamBool("InitElectrodeC");
	InitBiasX = GetParamBool("InitBiasX");
	InitBiasY = GetParamBool("InitBiasY");
	InitBiasZ = GetParamBool("InitBiasZ");
	InitTorunCoilDriverD0 = GetParamBool("InitTorunCoilDriverD0");
	InitTorunCoilDriverD1 = GetParamBool("InitTorunCoilDriverD1");
	InitTorunCoilDriverD2 = GetParamBool("InitTorunCoilDriverD2");
	InitTorunCoilDriverTrigger = GetParamBool("InitTorunCoilDriverTrigger");
	Init10MHzRfSourceSelection = GetParamBool("Init10MHzRfSourceSelection");
	InitBlueDetectionShutter = GetParamBool("InitBlueDetectionShutter");
	InitBlueMOTShutter = GetParamBool("InitBlueMOTShutter");
	InitZSShutter = GetParamBool("InitZSShutter");
	InitRedMOTShutter = GetParamBool("InitRedMOTShutter");
	InitRedPumpShutter = GetParamBool("InitRedPumpShutter");
	InitRepumpShutter = GetParamBool("InitRepumpShutter");
	InitPumpPolarization1Shutter = GetParamBool("InitPumpPolarization1Shutter");
	InitPumpPolarization2Shutter = GetParamBool("InitPumpPolarization2Shutter");
	InitCoarseSpectroscopyShutter = GetParamBool("InitCoarseSpectroscopyShutter");
	InitIntensityCoarseSpectroscopyAOM = GetParamDouble("InitIntensityCoarseSpectroscopyAOM");
	InitStartFrequencyCoarseSpectroscopyAOM = GetParamDouble("InitStartFrequencyCoarseSpectroscopyAOM");
	InitStopFrequencyCoarseSpectroscopyAOM = GetParamDouble("InitStopFrequencyCoarseSpectroscopyAOM");
	InitModulationFrequencyCoarseSpectroscopyAOM = GetParamDouble("InitModulationFrequencyCoarseSpectroscopyAOM");
	InitFSKModeCoarseSpectroscopyAOM = GetParamBool("InitFSKModeCoarseSpectroscopyAOM");
	InitRampRateClockCoarseSpectroscopyAOM = GetParamDouble("InitRampRateClockCoarseSpectroscopyAOM");
	InitClearACC1CoarseSpectroscopyAOM = GetParamBool("InitClearACC1CoarseSpectroscopyAOM");
	InitTriangleBitCoarseSpectroscopyAOM = GetParamBool("InitTriangleBitCoarseSpectroscopyAOM");
	InitFSKBitCoarseSpectroscopyAOM = GetParamBool("InitFSKBitCoarseSpectroscopyAOM");
	InitIntensityClockSteeringAOM = GetParamDouble("InitIntensityClockSteeringAOM");
	InitStartFrequencyClockSteeringAOM = GetParamDouble("InitStartFrequencyClockSteeringAOM");
	InitStopFrequencyClockSteeringAOM = GetParamDouble("InitStopFrequencyClockSteeringAOM");
	InitModulationFrequencyClockSteeringAOM = GetParamDouble("InitModulationFrequencyClockSteeringAOM");
	InitFSKModeClockSteeringAOM = GetParamBool("InitFSKModeClockSteeringAOM");
	InitRampRateClockClockSteeringAOM = GetParamDouble("InitRampRateClockClockSteeringAOM");
	InitClearACC1ClockSteeringAOM = GetParamBool("InitClearACC1ClockSteeringAOM");
	InitTriangleBitClockSteeringAOM = GetParamBool("InitTriangleBitClockSteeringAOM");
	InitFSKBitClockSteeringAOM = GetParamBool("InitFSKBitClockSteeringAOM");
	InitIntensityClockSpectroscopyDDS = GetParamDouble("InitIntensityClockSpectroscopyDDS");
	InitStartFrequencyClockSpectroscopyDDS = GetParamDouble("InitStartFrequencyClockSpectroscopyDDS");
	InitStopFrequencyClockSpectroscopyDDS = GetParamDouble("InitStopFrequencyClockSpectroscopyDDS");
	InitModulationFrequencyClockSpectroscopyDDS = GetParamDouble("InitModulationFrequencyClockSpectroscopyDDS");
	InitFSKModeClockSpectroscopyDDS = GetParamBool("InitFSKModeClockSpectroscopyDDS");
	InitRampRateClockClockSpectroscopyDDS = GetParamDouble("InitRampRateClockClockSpectroscopyDDS");
	InitClearACC1ClockSpectroscopyDDS = GetParamBool("InitClearACC1ClockSpectroscopyDDS");
	InitTriangleBitClockSpectroscopyDDS = GetParamBool("InitTriangleBitClockSpectroscopyDDS");
	InitFSKBitClockSpectroscopyDDS = GetParamBool("InitFSKBitClockSpectroscopyDDS");
	InitIntensityClockSpectroscopyDDSfixed40MHz = GetParamDouble("InitIntensityClockSpectroscopyDDSfixed40MHz");
	InitStartFrequencyClockSpectroscopyDDSfixed40MHz = GetParamDouble("InitStartFrequencyClockSpectroscopyDDSfixed40MHz");
	InitStopFrequencyClockSpectroscopyDDSfixed40MHz = GetParamDouble("InitStopFrequencyClockSpectroscopyDDSfixed40MHz");
	InitModulationFrequencyClockSpectroscopyDDSfixed40MHz = GetParamDouble("InitModulationFrequencyClockSpectroscopyDDSfixed40MHz");
	InitFSKModeClockSpectroscopyDDSfixed40MHz = GetParamBool("InitFSKModeClockSpectroscopyDDSfixed40MHz");
	InitRampRateClockClockSpectroscopyDDSfixed40MHz = GetParamDouble("InitRampRateClockClockSpectroscopyDDSfixed40MHz");
	InitClearACC1ClockSpectroscopyDDSfixed40MHz = GetParamBool("InitClearACC1ClockSpectroscopyDDSfixed40MHz");
	InitTriangleBitClockSpectroscopyDDSfixed40MHz = GetParamBool("InitTriangleBitClockSpectroscopyDDSfixed40MHz");
	InitFSKBitClockSpectroscopyDDSfixed40MHz = GetParamBool("InitFSKBitClockSpectroscopyDDSfixed40MHz");
	InitIntensityRedMOTAOM = GetParamDouble("InitIntensityRedMOTAOM");
	InitStartFrequencyRedMOTAOM = GetParamDouble("InitStartFrequencyRedMOTAOM");
	InitStopFrequencyRedMOTAOM = GetParamDouble("InitStopFrequencyRedMOTAOM");
	InitModulationFrequencyRedMOTAOM = GetParamDouble("InitModulationFrequencyRedMOTAOM");
	InitFSKModeRedMOTAOM = GetParamBool("InitFSKModeRedMOTAOM");
	InitRampRateClockRedMOTAOM = GetParamDouble("InitRampRateClockRedMOTAOM");
	InitClearACC1RedMOTAOM = GetParamBool("InitClearACC1RedMOTAOM");
	InitTriangleBitRedMOTAOM = GetParamBool("InitTriangleBitRedMOTAOM");
	InitFSKBitRedMOTAOM = GetParamBool("InitFSKBitRedMOTAOM");
	InitIntensityRedPumpAOM = GetParamDouble("InitIntensityRedPumpAOM");
	InitStartFrequencyRedPumpAOM = GetParamDouble("InitStartFrequencyRedPumpAOM");
	InitStopFrequencyRedPumpAOM = GetParamDouble("InitStopFrequencyRedPumpAOM");
	InitModulationFrequencyRedPumpAOM = GetParamDouble("InitModulationFrequencyRedPumpAOM");
	InitFSKModeRedPumpAOM = GetParamBool("InitFSKModeRedPumpAOM");
	InitRampRateClockRedPumpAOM = GetParamDouble("InitRampRateClockRedPumpAOM");
	InitClearACC1RedPumpAOM = GetParamBool("InitClearACC1RedPumpAOM");
	InitTriangleBitRedPumpAOM = GetParamBool("InitTriangleBitRedPumpAOM");
	InitFSKBitRedPumpAOM = GetParamBool("InitFSKBitRedPumpAOM");
	InitIntensityPumpDPAOM = GetParamDouble("InitIntensityPumpDPAOM");
	InitStartFrequencyPumpDPAOM = GetParamDouble("InitStartFrequencyPumpDPAOM");
	InitStopFrequencyPumpDPAOM = GetParamDouble("InitStopFrequencyPumpDPAOM");
	InitModulationFrequencyPumpDPAOM = GetParamDouble("InitModulationFrequencyPumpDPAOM");
	InitFSKModePumpDPAOM = GetParamBool("InitFSKModePumpDPAOM");
	InitRampRateClockPumpDPAOM = GetParamDouble("InitRampRateClockPumpDPAOM");
	InitClearACC1PumpDPAOM = GetParamBool("InitClearACC1PumpDPAOM");
	InitTriangleBitPumpDPAOM = GetParamBool("InitTriangleBitPumpDPAOM");
	InitFSKBitPumpDPAOM = GetParamBool("InitFSKBitPumpDPAOM");
	InitFrequencyBlueMOTDPAOM = GetParamDouble("InitFrequencyBlueMOTDPAOM");
	InitIntensityBlueMOTDPAOM = GetParamDouble("InitIntensityBlueMOTDPAOM");
	InitFrequencyBlueDetectionDPAOM = GetParamDouble("InitFrequencyBlueDetectionDPAOM");
	InitIntensityBlueDetectionDPAOM = GetParamDouble("InitIntensityBlueDetectionDPAOM");
	InitFrequencyLatticeAOM = GetParamDouble("InitFrequencyLatticeAOM");
	InitIntensityLatticeAOM = GetParamDouble("InitIntensityLatticeAOM");
	InitFrequencyLatticeEOM = GetParamDouble("InitFrequencyLatticeEOM");
	InitIntensityLatticeEOM = GetParamDouble("InitIntensityLatticeEOM");
	InitFrequencyCh0ClockPDHDDS = GetParamDouble("InitFrequencyCh0ClockPDHDDS");
	InitIntensityCh0ClockPDHDDS = GetParamDouble("InitIntensityCh0ClockPDHDDS");
	InitFrequencyCh1ClockPDHDDS = GetParamDouble("InitFrequencyCh1ClockPDHDDS");
	InitIntensityCh1ClockPDHDDS = GetParamDouble("InitIntensityCh1ClockPDHDDS");
	InitPhaseCh1ClockPDHDDS = GetParamDouble("InitPhaseCh1ClockPDHDDS");
	InitIntensityUserIOTestDDSAD9854_0 = GetParamDouble("InitIntensityUserIOTestDDSAD9854_0");
	InitStartFrequencyTuningWordUserIOTestDDSAD9854_0 = GetParamDouble("InitStartFrequencyTuningWordUserIOTestDDSAD9854_0");
	InitStopFrequencyTuningWordUserIOTestDDSAD9854_0 = GetParamDouble("InitStopFrequencyTuningWordUserIOTestDDSAD9854_0");
	InitModulationFrequencyUserIOTestDDSAD9854_0 = GetParamDouble("InitModulationFrequencyUserIOTestDDSAD9854_0");
	InitFSKModeUserIOTestDDSAD9854_0 = GetParamBool("InitFSKModeUserIOTestDDSAD9854_0");
	InitRampRateClockUserIOTestDDSAD9854_0 = GetParamDouble("InitRampRateClockUserIOTestDDSAD9854_0");
	InitClearACC1UserIOTestDDSAD9854_0 = GetParamBool("InitClearACC1UserIOTestDDSAD9854_0");
	InitTriangleBitUserIOTestDDSAD9854_0 = GetParamBool("InitTriangleBitUserIOTestDDSAD9854_0");
	InitFSKBitUserIOTestDDSAD9854_0 = GetParamBool("InitFSKBitUserIOTestDDSAD9854_0");
	InitFrequencyUserIOTestDDSAD9858_0 = GetParamDouble("InitFrequencyUserIOTestDDSAD9858_0");
	InitAttenuationUserIOTestDDSAD9858_0 = GetParamDouble("InitAttenuationUserIOTestDDSAD9858_0");
	InitFrequencyCh0UserIOTestDDSAD9958_0 = GetParamDouble("InitFrequencyCh0UserIOTestDDSAD9958_0");
	InitIntensityCh0UserIOTestDDSAD9958_0 = GetParamDouble("InitIntensityCh0UserIOTestDDSAD9958_0");
	InitFrequencyCh1UserIOTestDDSAD9958_0 = GetParamDouble("InitFrequencyCh1UserIOTestDDSAD9958_0");
	InitIntensityCh1UserIOTestDDSAD9958_0 = GetParamDouble("InitIntensityCh1UserIOTestDDSAD9958_0");
	InitPhaseCh1UserIOTestDDSAD9958_0 = GetParamDouble("InitPhaseCh1UserIOTestDDSAD9958_0");
	InitSpareAnalogOut0 = GetParamDouble("InitSpareAnalogOut0");
	InitSpareAnalogOut1 = GetParamDouble("InitSpareAnalogOut1");
	InitSpareAnalogOut2 = GetParamDouble("InitSpareAnalogOut2");
	InitSpareAnalogOut3 = GetParamDouble("InitSpareAnalogOut3");
	InitSpareAnalogOut4 = GetParamDouble("InitSpareAnalogOut4");
	InitSpareAnalogOut5 = GetParamDouble("InitSpareAnalogOut5");
	InitSpareAnalogOut6 = GetParamDouble("InitSpareAnalogOut6");
	InitSpareAnalogOut7 = GetParamDouble("InitSpareAnalogOut7");
	InitSpareDigitalOut0 = GetParamBool("InitSpareDigitalOut0");
	InitSpareDigitalOut1 = GetParamBool("InitSpareDigitalOut1");
	InitSpareDigitalOut2 = GetParamBool("InitSpareDigitalOut2");
	InitSpareDigitalOut3 = GetParamBool("InitSpareDigitalOut3");
	InitSpareDigitalOut4 = GetParamBool("InitSpareDigitalOut4");
	InitSpareDigitalOut5 = GetParamBool("InitSpareDigitalOut5");
	InitSpareDigitalOut6 = GetParamBool("InitSpareDigitalOut6");
	InitSpareDigitalOut7 = GetParamBool("InitSpareDigitalOut7");
	InitSpareDigitalOut8 = GetParamBool("InitSpareDigitalOut8");
	InitSpareDigitalOut9 = GetParamBool("InitSpareDigitalOut9");
	InitSpareDigitalOut10 = GetParamBool("InitSpareDigitalOut10");
	InitSpareDigitalOut11 = GetParamBool("InitSpareDigitalOut11");
	InitSpareDigitalOut12 = GetParamBool("InitSpareDigitalOut12");
	InitSpareDigitalOut13 = GetParamBool("InitSpareDigitalOut13");
	InitSpareDigitalOut14 = GetParamBool("InitSpareDigitalOut14");
	InitSpareDigitalOut15 = GetParamBool("InitSpareDigitalOut15");
	InitExtraClockShutter0 = GetParamBool("InitExtraClockShutter0");
	InitExtraClockShutter1 = GetParamBool("InitExtraClockShutter1");
	InitExtraClockShutter2 = GetParamBool("InitExtraClockShutter2");
	InitExtraClockShutter3 = GetParamBool("InitExtraClockShutter3");
	InitExtraClockShutter4 = GetParamBool("InitExtraClockShutter4");
	InitExtraClockShutter5 = GetParamBool("InitExtraClockShutter5");
	InitAdditionalShutter0 = GetParamBool("InitAdditionalShutter0");
	InitAdditionalShutter1 = GetParamBool("InitAdditionalShutter1");
	InitAdditionalShutter2 = GetParamBool("InitAdditionalShutter2");
	InitAdditionalShutter3 = GetParamBool("InitAdditionalShutter3");
	InitAdditionalShutter4 = GetParamBool("InitAdditionalShutter4");
	InitAdditionalShutter5 = GetParamBool("InitAdditionalShutter5");
	InitAdditionalShutter6 = GetParamBool("InitAdditionalShutter6");
	InitAdditionalShutter7 = GetParamBool("InitAdditionalShutter7");
}
